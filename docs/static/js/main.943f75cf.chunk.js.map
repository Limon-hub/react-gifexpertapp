{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","setImages","useEffect","then","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,gCACK,qBAAKgB,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCHJQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACtB,EAA4Bd,mBAAS,IAArC,mBAAO2B,EAAP,KAAeQ,EAAf,KAQA,OANAC,qBAAW,WACPvB,EAAQC,GAAUuB,KAAKF,KACxB,CAACrB,IAKA,gCACI,mCAAOA,EAAP,OAEQa,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,WCdjCa,EAAe,WAExB,MAAoCtC,mBAAS,CAAC,cAA9C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAMA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQwC,EAAWhB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCftC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.943f75cf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qDUts29kwUdL78OLCj7Qr5w1ltOwjumO`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div>\r\n             <img src={url} alt={title} />\r\n             <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect( () =>{\r\n        getGifs(category).then(setImages)\r\n    }, [category])\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h3> { category } </h3>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem key={img.id} {...img}/>\r\n                    ))\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One punch', 'Samurai', 'Dragon ball']\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    /* const handleadd = () =>{\r\n        setcategories([...categories, 'otro'])\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={category} category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//\n\n"],"sourceRoot":""}